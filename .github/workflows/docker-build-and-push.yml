name: Docker Build and Push

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: acquisitions

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for main branch
            type=ref,event=branch
            type=raw,value=latest,enable={{is_default_branch}}
            # set production timestamp tag
            type=raw,value=prod-{{date 'YYYYMMDD-HHmmss' tz='UTC'}},enable={{is_default_branch}}
            # git short commit hash
            type=sha,prefix={{branch}}-
          labels: |
            org.opencontainers.image.title=Acquisitions API
            org.opencontainers.image.description=Node.js Express API for acquisitions management
            org.opencontainers.image.vendor=Acquisitions Team
            org.opencontainers.image.source=https://github.com/TheSaviourEking/acquisitions

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          target: production
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production

      - name: Generate deployment summary
        run: |
          echo "## 🐳 Docker Image Published" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Image Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository**: \`${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Platforms**: linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY
          echo "- **Target**: production" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Published Tags" >> $GITHUB_STEP_SUMMARY
          
          # Parse and display tags
          TAGS="${{ steps.meta.outputs.tags }}"
          echo "| Tag | Description |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|-------------|" >> $GITHUB_STEP_SUMMARY
          
          # Process each tag
          for tag in $(echo "$TAGS" | tr '\n' ' '); do
            if echo "$tag" | grep -q "latest"; then
              echo "| \`${tag##*/}\` | Latest stable release |" >> $GITHUB_STEP_SUMMARY
            elif echo "$tag" | grep -q "prod-"; then
              echo "| \`${tag##*/}\` | Production build with timestamp |" >> $GITHUB_STEP_SUMMARY
            elif echo "$tag" | grep -q "main-"; then
              echo "| \`${tag##*/}\` | Main branch with commit SHA |" >> $GITHUB_STEP_SUMMARY
            else
              echo "| \`${tag##*/}\` | Branch or custom tag |" >> $GITHUB_STEP_SUMMARY
            fi
          done
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Quick Deploy Commands" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "```bash" >> $GITHUB_STEP_SUMMARY
          echo "# Pull and run the latest image" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
          echo "docker run -d -p 5000:5000 --name acquisitions-api \\" >> $GITHUB_STEP_SUMMARY
          echo "  -e DATABASE_URL='your-database-url' \\" >> $GITHUB_STEP_SUMMARY
          echo "  -e JWT_SECRET='your-jwt-secret' \\" >> $GITHUB_STEP_SUMMARY
          echo "  ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Or using docker-compose" >> $GITHUB_STEP_SUMMARY
          echo "docker-compose -f docker-compose.prod.yml up -d" >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Build Information" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Workflow**: [${{ github.workflow }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          echo "- **Built at**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY

      - name: Image scanning summary
        if: success()
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔍 Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Multi-platform Docker image built successfully" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Image pushed to Docker Hub registry" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Build cache optimized for future builds" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🎉 **Ready for deployment!** The production image is now available for use." >> $GITHUB_STEP_SUMMARY